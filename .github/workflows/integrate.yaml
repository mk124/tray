name: Integration

on:
  workflow_dispatch:
  
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ '**', '!gh-pages', '!coverage' ]
    types: [ opened, reopened, ready_for_review, synchronize ]
  workflow_call:
    inputs:
      ref:
        description: Reference to use for checking out
        default: ${{ github.sha }}
        type: string
    
defaults:
  run:
    shell: bash

jobs:
  threshold:
    name: Check Status
    uses: StirlingLabs/Actions/.github/workflows/threshold.yaml@v23.04.0
  
  build:
    name: Build
    needs: threshold
    if: |
      needs.threshold.outputs.continue == 'true' ||
      needs.threshold.outputs.release == 'true'
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install Ninja
      run: |
        case ${{ runner.os }} in
          Linux)   ninja_os=linux ;;
          macOS)   ninja_os=mac ;;
          Windows) ninja_os=win ;;
        esac
        url="https://github.com/ninja-build/ninja/releases/latest/download/ninja-$ninja_os.zip"
        curl -L -o ninja-$ninja_os.zip $url
        if [[ ${{ runner.os }} == 'Windows' ]]; then
          unzip ninja-$ninja_os.zip -d .
          export PATH=$PATH:"$(pwd -W)"
        else
          sudo unzip ninja-$ninja_os.zip -d /usr/local/bin/
        fi
        
        ninja --version
    - name: Install Dependencies
      if: runner.os == 'Linux'
      run: |
        echo "Need to install Qt..."
        sudo apt-get update
        sudo apt-get install libgl1-mesa-dev qt6-base-dev
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G Ninja ..
    - name: Make
      working-directory: build
      run: ninja
    - uses: actions/upload-artifact@v3
      name: Artifact
      with:
        name: libtray-${{ runner.os }}
        path: |
          build/*.so
          build/*.dylib
          build/*.dll
        if-no-files-found: error
